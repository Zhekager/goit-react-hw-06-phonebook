{"version":3,"sources":["components/Filter/Filter.module.css","components/Container/Container.module.css","redux/contacts/actions.js","redux/contacts/types.js","redux/contacts/reducer.js","redux/store.js","components/Container/Container.js","components/FormContacts/FormContacts.js","redux/contacts/selectors.js","components/Filter/Filter.js","components/ListContacts/ListContacts.js","App.js","index.js","components/FormContacts/FormContacts.module.css","components/ListContacts/ListContacts.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","filterContact","items","createReducer","state","filter","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","contacts","persistReducer","contactsReducer","devTools","process","persistor","persistStore","Container","children","className","styles","ContactForm","dispatch","useDispatch","useState","setName","setNumber","handleChange","event","target","value","resetForm","Form","onSubmit","preventDefault","Label","Input","type","pattern","title","required","onChange","placeholder","Button","getContacts","getFilter","getVisibleContacts","normalizedFilter","toLowerCase","includes","Filter","useSelector","length","ContactList","visibleContacts","List","map","Item","Text","Span","onClick","App","autoClose","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.54c967c2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Label\":\"Filter_Label__6e7c5\",\"Input\":\"Filter_Input__lkEw1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__2ieIZ\"};","import { createAction } from '@reduxjs/toolkit';\r\nimport { ADD_CONTACT, DELETE_CONTACT, FILTER_CONTACT } from './types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport const addContact = createAction(ADD_CONTACT, (name, number) => ({\r\n  payload: {\r\n    id: uuidv4(),\r\n    name,\r\n    number,\r\n  },\r\n}));\r\n\r\nexport const deleteContact = createAction(DELETE_CONTACT);\r\nexport const filterContact = createAction(FILTER_CONTACT);","export const ADD_CONTACT = 'contacts/add';\r\nexport const DELETE_CONTACT = 'contacts/delete';\r\nexport const FILTER_CONTACT = 'contacts/filter';","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport { addContact, deleteContact, filterContact } from './actions';\r\n\r\nconst items = createReducer([], {\r\n  [addContact]: (state, { payload }) => [...state, payload],\r\n  [deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [filterContact]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactsReducer from './contacts/reducer';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport const persistor = persistStore(store);","import PropTypes from 'prop-types';\nimport styles from './Container.module.css';\n\nfunction Container({ children }) {\n    return <div className={styles.Container}>{children}</div>;\n}\n\nContainer.propTypes = {\n    children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from '../../redux/contacts/actions';\nimport styles from './FormContacts.module.css';\n\nfunction ContactForm() {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    dispatch(addContact(name, number));\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={styles.Form} onSubmit={handleSubmit}>\n      <label className={styles.Label}>\n        Name\n        <input\n          className={styles.Input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          value={name}\n          onChange={handleChange}\n          placeholder=\"Ivan Ivanov\"\n        />\n      </label>\n      <label className={styles.Label}>\n        Number\n        <input\n          className={styles.Input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={handleChange}\n          value={number}\n          placeholder=\"111-11-11\"\n        />\n      </label>\n      <button className={styles.Button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nexport default ContactForm;","export const getContacts = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getVisibleContacts = state => {\r\n  const contacts = getContacts(state);\r\n  const filter = getFilter(state);\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return contacts.filter(({ name }) =>\r\n    name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n};","import { useSelector, useDispatch } from 'react-redux';\nimport { filterContact } from '../../redux/contacts/actions';\nimport { getFilter, getContacts } from '../../redux/contacts/selectors';\nimport styles from './Filter.module.css';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n  const contacts = useSelector(getContacts);\n\n  if (!contacts.length)\n    return <p>Your phonebook is empty. Please add contact.</p>;\n  return (\n    <label className={styles.Label}>\n      Find contacts by name\n      <input\n        type=\"text\"\n        name=\"filter\"\n        className={styles.Input}\n        value={filter}\n        onChange={event => dispatch(filterContact(event.target.value))}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n      />\n    </label>\n  );\n};\n\nexport default Filter;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts/actions';\nimport { getVisibleContacts } from '../../redux/contacts/selectors';\nimport styles from './ListContacts.module.css';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const visibleContacts = useSelector(getVisibleContacts);\n\n  return (\n    <ul className={styles.List}>\n      {visibleContacts.map(({ id, name, number }) => (\n        <li className={styles.Item} key={id}>\n          <p className={styles.Text}>\n            {name}: <span className={styles.Span}>{number}</span>\n          </p>\n          <button\n            className={styles.Button}\n            type=\"button\"\n            onClick={() => dispatch(deleteContact(id))}\n            title=\"Удалить\"\n          >Delete</button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;","// import React, { Component } from 'react';\n// import Container from './components/Container';\n// import ContactForm from './components/FormContacts';\n// import ContactList from './components/ListContacts';\n// import Filter from './components/Filter';\n// import { v4 as uuidv4 } from 'uuid';\n// import './App.css';\n\nimport Container from './components/Container';\nimport ContactForm from './components/FormContacts';\nimport Filter from './components/Filter';\nimport ContactList from './components/ListContacts';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n      <ToastContainer autoClose={3700} />\n    </Container>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"FormContacts_Form__1scz5\",\"Label\":\"FormContacts_Label__2kqxV\",\"Input\":\"FormContacts_Input__1v7kP\",\"Button\":\"FormContacts_Button__3ubv6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"List\":\"ListContacts_List__2CLWl\",\"Item\":\"ListContacts_Item__k_7ky\",\"Text\":\"ListContacts_Text__2hbuO\",\"Span\":\"ListContacts_Span__29Q71\",\"Button\":\"ListContacts_Button__siGXB\"};"],"sourceRoot":""}